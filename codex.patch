diff --git a/app.py b/app.py
index 29b9dfd83d61121f808a9e6cfc12dd3380d34cdd..4988575205f0de28d2b5744780eb5695e738c947 100644
--- a/app.py
+++ b/app.py
@@ -475,61 +475,61 @@ def track_detail(track_name):
         if s.best_lap < best_so_far:
             best_so_far = s.best_lap
             improvement_dates.append(s.date.strftime('%Y-%m-%d %H:%M'))
             improvement_laps.append(s.best_lap)
 
     chart_data = {
         'dates': dates,
         'best_laps': bests,
         'improvement_dates': improvement_dates,
         'improvement_laps': improvement_laps,
         'drift_cutoff': drift_cutoff
     }
 
     return render_template('track.html',
                            track_name=t.display_name,
                            sessions=sessions,
                            chart_data=chart_data,
                            username=user.username)
 
 
 @app.route('/race/<int:session_id>')
 def race_detail(session_id):
     if 'email' not in session:
         return redirect(url_for('imap_login'))
 
-    s = Session.query.get_or_404(session_id)
-    if s.track.user.email != session['email']:
+    race_session = Session.query.get_or_404(session_id)
+    if race_session.track.user.email != session['email']:
         return redirect(url_for('imap_login'))
 
-    laps = eval(s.lap_data or '[]')
+    laps = eval(race_session.lap_data or '[]')
     return render_template(
         'race.html',
-        track_name=s.track.display_name,
-        session=s,
+        track_name=race_session.track.display_name,
+        race_session=race_session,
         laps=laps,
-        username=s.track.user.username
+        username=race_session.track.user.username
     )
 
 
 @app.route('/download/<track_name>.csv')
 def download(track_name):
     if 'email' not in session:
         return redirect(url_for('imap_login'))
 
     user = User.query.filter_by(email=session['email']).first()
     t    = Track.query.filter_by(raw_name=track_name, user_id=user.id).first()
 
     out = StringIO()
     w   = csv.writer(out)
     w.writerow(['Date','Total Laps','Best Lap','Avg Lap','Fastest Lap #']
                + [f'Lap {i}' for i in range(1,17)])
 
     for s in t.sessions:
         laps = eval(s.lap_data or '[]')
         row = [
             s.date.strftime('%Y-%m-%d %H:%M'),
             s.total_laps, s.best_lap, s.avg_lap, s.fastest_lap_num
         ] + laps[:16]
         w.writerow(row)
 
     return Response(

diff --git a/templates/race.html b/templates/race.html
index 8c27fff5dbfdf374279eb38a096b0c2b1efcbc9b..dc98094cc5282dbedb8592678d3824addc0d6891 100644
--- a/templates/race.html
+++ b/templates/race.html
@@ -1,20 +1,20 @@
 {% extends "base.html" %}
 
 {% block content %}
 <div class="container mt-4">
     <div class="main-card">
-        <h2 class="mb-3">{{ track_name }} - {{ session.date.strftime('%Y-%m-%d %I:%M %p') }}</h2>
-        <p><strong>Total Laps:</strong> {{ session.total_laps }}</p>
-        <p><strong>Best Lap:</strong> {{ "%.3f"|format(session.best_lap) }}s</p>
-        <p><strong>Avg Lap:</strong> {{ "%.3f"|format(session.avg_lap) }}s</p>
-        <p><strong>Fastest Lap #:</strong> {{ session.fastest_lap_num }}</p>
+        <h2 class="mb-3">{{ track_name }} - {{ race_session.date.strftime('%Y-%m-%d %I:%M %p') }}</h2>
+        <p><strong>Total Laps:</strong> {{ race_session.total_laps }}</p>
+        <p><strong>Best Lap:</strong> {{ "%.3f"|format(race_session.best_lap) }}s</p>
+        <p><strong>Avg Lap:</strong> {{ "%.3f"|format(race_session.avg_lap) }}s</p>
+        <p><strong>Fastest Lap #:</strong> {{ race_session.fastest_lap_num }}</p>
         <hr>
         <h5>Lap Times</h5>
         <ol>
         {% for lap in laps %}
             <li>{{ lap }}</li>
         {% endfor %}
         </ol>
     </div>
 </div>
 {% endblock %}

